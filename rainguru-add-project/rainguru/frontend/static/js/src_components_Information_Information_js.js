/*! For license information please see src_components_Information_Information_js.js.LICENSE.txt */
"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["src_components_Information_Information_js"],{"./src/components/Information/Information.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ Information)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var _AnimationBar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AnimationBar */ "./src/components/Information/AnimationBar.js");\n/* harmony import */ var react_icons_ai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-icons/ai */ "./node_modules/react-icons/ai/index.esm.js");\n\n\n\nclass Information extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  /**\n   * Sets the information section in the starting state.\n   * @param props contains optional properties of the information section.\n   */\n  constructor(props) {\n    super(props); // state variables to pass along to the animation bar\n\n    this.state = {\n      animationBarUpdateProp: this.props.animationBarUpdateProp,\n      gradientLegend: true,\n      tooltipStatsRmse: false,\n      tooltipStatsBias: false,\n      tooltipLegend: false\n    };\n    this.displayTooltipLegend = this.displayTooltipLegend.bind(this);\n  }\n  /*\n  * Display the tooltip when the user click the info button\n  * Rmse and bias tooltip.\n  */\n\n\n  displayTooltipLegend(tooltip) {\n    if (tooltip == \'rmse\') {\n      this.setState({\n        tooltipStatsRmse: !this.state.tooltipStatsRmse,\n        tooltipStatsBias: false,\n        tooltipLegend: true\n      });\n    }\n\n    if (tooltip == \'bias\') {\n      this.setState({\n        tooltipStatsBias: !this.state.tooltipStatsBias,\n        tooltipStatsRmse: false,\n        tooltipLegend: true\n      });\n    }\n  }\n  /**\n   * Changes the state according to the prop to pass the change down to the animation bar.\n   *\n   * @param nextProps the props given down from the App component.\n   * @param prevState the last state of the component before these new props.\n   */\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // if the animation bar update prop changes send it through\n    if (nextProps.animationBarUpdateProp !== prevState.animationBarUpdateProp) {\n      return {\n        animationBarUpdateProp: nextProps.animationBarUpdateProp\n      };\n    } else return null;\n  }\n  /**\n   * Renders the content of the information div at the bottom of the screen, so the animation bar and the legend.\n   * @returns the rendered content of the information div.\n   */\n\n\n  render() {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: "informationContents",\n      "data-testid": "information"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: "floating-info"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: "tooltip-legend"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: this.state.tooltipLegend ? "box-tooltip-legend" : "hideElement",\n      id: "tooltip-legend"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: this.state.tooltipStatsRmse ? "tooltip-stats" : "hideElement",\n      id: "tooltip-rmse"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null, "Root Mean Square Error (RMSE) is the standard deviation of the residuals (prediction errors).")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: this.state.tooltipStatsBias ? "tooltip-stats" : "hideElement",\n      id: "tooltip-bias"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null, "The average of the difference between predictions and observations")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: this.state.gradientLegend ? "gradientsLegend" : "hideElement"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "gradient1container",\n      className: "gradient-container"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "gradient1",\n      className: "gradient-part"\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: "legend-value"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "0.1"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "gradient2container",\n      className: "gradient-container"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "gradient2",\n      className: "gradient-part"\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: "legend-value"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "0.5"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "gradient3container",\n      className: "gradient-container"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "gradient3",\n      className: "gradient-part"\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: "legend-value"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "1"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "gradient4container",\n      className: "gradient-container"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "gradient4",\n      className: "gradient-part"\n    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: "double-text-div"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "left-value",\n      className: "legend-value"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, "10")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      id: "right-value",\n      className: "legend-value"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("p", null, ">100")))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n      className: "button-tooltip-legend",\n      onClick: () => {\n        this.setState({\n          tooltipLegend: !this.state.tooltipLegend\n        });\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_icons_ai__WEBPACK_IMPORTED_MODULE_2__.AiFillQuestionCircle, null)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_AnimationBar__WEBPACK_IMPORTED_MODULE_1__["default"], {\n      updateProp: this.state.animationBarUpdateProp,\n      displayTooltipLegend: this.displayTooltipLegend\n    }));\n  }\n\n}\n\n//# sourceURL=webpack://frontend/./src/components/Information/Information.js?')}}]);